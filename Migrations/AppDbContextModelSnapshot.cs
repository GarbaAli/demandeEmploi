// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using demandeEmploi.Models;

namespace demandeEmploi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CandidatCompetence", b =>
                {
                    b.Property<int>("candidatscandidatId")
                        .HasColumnType("int");

                    b.Property<int>("competencescomptetenceId")
                        .HasColumnType("int");

                    b.HasKey("candidatscandidatId", "competencescomptetenceId");

                    b.HasIndex("competencescomptetenceId");

                    b.ToTable("CandidatCompetence");
                });

            modelBuilder.Entity("demandeEmploi.Models.Candidat", b =>
                {
                    b.Property<int>("candidatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("DteNaissance")
                        .HasColumnType("datetime2");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profession")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("service")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sexe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("statut")
                        .HasColumnType("bit");

                    b.Property<string>("statutFamilial")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("candidatId");

                    b.ToTable("Candidats");
                });

            modelBuilder.Entity("demandeEmploi.Models.Competence", b =>
                {
                    b.Property<int>("comptetenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("libelle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("comptetenceId");

                    b.ToTable("Competences");
                });

            modelBuilder.Entity("demandeEmploi.Models.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("candidatLinkcandidatId")
                        .HasColumnType("int");

                    b.Property<string>("fichier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocumentId");

                    b.HasIndex("candidatLinkcandidatId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("CandidatCompetence", b =>
                {
                    b.HasOne("demandeEmploi.Models.Candidat", null)
                        .WithMany()
                        .HasForeignKey("candidatscandidatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("demandeEmploi.Models.Competence", null)
                        .WithMany()
                        .HasForeignKey("competencescomptetenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("demandeEmploi.Models.Document", b =>
                {
                    b.HasOne("demandeEmploi.Models.Candidat", "candidatLink")
                        .WithMany("documents")
                        .HasForeignKey("candidatLinkcandidatId");

                    b.Navigation("candidatLink");
                });

            modelBuilder.Entity("demandeEmploi.Models.Candidat", b =>
                {
                    b.Navigation("documents");
                });
#pragma warning restore 612, 618
        }
    }
}
